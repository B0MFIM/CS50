DYNAMIC MEMORY ALLOCATION

    A ALOCAÇÃO DINÂMICA DE MEMÓRIA É UTILIZADA PARA OBTER NOVA MEMÓRIA DURANTE A EXECUÇÃO DO PROGRAMA, DIFERENTE DO QUE
    VIMOS ATÉ AGORA.

    ISSO É FEITO ALOCANDO MEMÓRIA NA ÁREA CHAMADA 'HEAP', UM GRANDE RESERVATÓRIO DE MEMÓRIA. ATÉ O MOMENTO, ESTAMOS
    FAMILIARIZADOS COM A 'STACK' (PILHA), QUE É ONDE A MEMÓRIA ESTÁTICA É CONFIGURADA, COMO VARIÁVEIS DECLARADAS COM
    NOMES ESPECÍFICOS. POR OUTRO LADO, A MEMÓRIA ALOCADA DINAMICAMENTE, CRIADA DURANTE A EXECUÇÃO DO PROGRAMA, VEM DO
    HEAP.

        __________________________
        |__________TEXT__________|
        |____INITIALIZED DATA____|
        |___UNINITIALIZED DATA___|
        |__________HEAP__________|
        |           \/           |
        |                        |
        |                        |
        |           /\           |
        |__________STACK_________|
        |_ENVIRONMENTS VARIABLES_|

    COMO PODEMOS VER NO DIAGRAMA, O STACK E O HEAP COMPARTILHAM O MESMO GRANDE ESPAÇO DE MEMÓRIA. A DIFERENÇA ESTÁ NA
    FORMA COMO ESSE ESPAÇO É UTILIZADO: O STACK É ALOCADO DE BAIXO PARA CIMA, ENQUANTO O HEAP É ALOCADO DE CIMA PARA
    BAIXO. ISSO SIGNIFICA QUE OS ENDEREÇOS DE MEMÓRIA DO STACK SÃO MENORES, ENQUANTO OS DO HEAP SÃO MAIORES. ESSA
    DIVISÃO É APENAS UMA CONVENÇÃO PARA ORGANIZAR O USO DA MEMÓRIA: O STACK É USADO PARA MEMÓRIA ESTÁTICA, COMO
    VARIÁVEIS LOCAIS, ENQUANTO O HEAP É UTILIZADO PARA MEMÓRIA DINÂMICA, ALOCADA DURANTE A EXECUÇÃO DO PROGRAMA.

    COMO CHEGAMOS A ESSA MEMÓRIA ALOCADA DINAMICAMENTE? COMO ACESSAMOS A MEMÓRIA DO HEAP? 

    PRECISAMOS USAR UMA NOVA FUNÇÃO CHAMADA MALLOC.

    MALLOC 
    
        