DEFINING CUSTOM TYPES

    PODEMOS DEFINIR NOSSOS PRÓPRIOS TIPOS DE DADOS USANDO A PALAVRA-CHAVE `TYPEDEF` E `STRUCT`. TYPEDEF PODE NOS PROVER
    UMA MANEIRA DE CRIAR NOMES ABREVIADOS OU REESCRITOS PARA TIPOS DE DADOS, O QUE PODE TORNAR NOSSO CÓDIGO MAIS LEGÍVEL
    E FÁCIL DE ENTENDER. PODEMOS REESCREVER TIPOS DE DADOS QUE JA EXISTEM OU CRIAR NOSSOS PRÓPRIOS TIPO DE DADOS. 
    
    A PRIMEIRA COISA QUE SE FAZ É DEFINIR UM TIPO DA MANEIRA NORMAL, E, ENTÃO CRIAR UM ALIAS PARA OUTRA COISA.
    POR EXEMPLO:

        TYPEDEF <NOME ANTIGO> <NOME NOVO>;

            typedef unsigned char byte;

            typedef char * string;
    
    TYPEDEF SE TORNA ÓTIMO QUANDO COMBINADO COM O STRUCT. OS STRUCTS TEM UM NOME DE TIPO DE DUAS PALAVRAS. E ENTÃO PODE
    SE TORNAR IRRITANTE CRIAR VARIÁVEIS DESSE TIPO, AS LINHAS PODEM FICAR MUITO LONGAS. E ASSIM PODEMOS USAR TYPEDEF
    PARA CRIAR ALGO MUITO MAIS CURTO.

    ENTÃO, SE EU DEFINIR UM CARRO DA SEGUINTE FORMA:

        struct car
        {
            int year;
            char model[10];
            char plate[7];
            int odometer;
            double engine_size;
        };

        typedef struct car car_t;