DEFINING CUSTOM TYPES

    PODEMOS DEFINIR NOSSOS PRÓPRIOS TIPOS DE DADOS USANDO AS PALAVRAS-CHAVE `TYPEDEF` E `STRUCT`. `TYPEDEF` NOS PERMITE
    CRIAR NOMES ABREVIADOS OU ALTERNATIVOS PARA TIPOS DE DADOS, O QUE PODE TORNAR NOSSO CÓDIGO MAIS LEGÍVEL E FÁCIL DE
    ENTENDER. PODEMOS REESCREVER TIPOS DE DADOS EXISTENTES OU CRIAR NOSSOS PRÓPRIOS TIPOS DE DADOS.
    
    PRIMEIRO, DEFINIMOS UM TIPO DE DADO DA MANEIRA CONVENCIONAL E, EM SEGUIDA, CRIAMOS UM ALIAS PARA ELE.
    POR EXEMPLO:

        typedef <TIPO EXISTENTE> <NOVO NOME>;

            typedef unsigned char byte;

            typedef char * string;
    
    `TYPEDEF` SE TORNA AINDA MAIS ÚTIL QUANDO COMBINADO COM `STRUCT`. OS `STRUCTS` TÊM UM NOME DE TIPO COMPOSTO POR DUAS
    PALAVRAS, O QUE PODE TORNAR A CRIAÇÃO DE VARIÁVEIS DESSE TIPO UM POUCO COMPLICADA. ASSIM, PODEMOS USAR `TYPEDEF` PARA
    CRIAR NOMES MAIS CURTOS E SIMPLES.

    POR EXEMPLO, SE DEFINIRMOS UM `CARRO` DA SEGUINTE FORMA:

        struct car
        {
            int year;
            char model[10];
            char plate[7];
            int odometer;
            double engine_size;
        };

        typedef struct car car_t;

    TAMBÉM PODEMOS DEFINIR DA SEGUINTE FORMA:

        typedef struct car
        {
            int year;
            char model[10];
            char plate[7];
            int odometer;
            double engine_size;
        }
        car_t;

    COMO `TYPEDEF`S SÃO FREQUENTEMENTE USADOS COM `STRUCT`, ESSA VERSÃO MAIS CONCISA DE ESCREVER UM `TYPEDEF` COM UM `STRUCT`
    É BASTANTE ÚTIL.

    UMA VEZ DEFINIDO O `TYPEDEF`, A DECLARAÇÃO DE UMA VARIÁVEL DO TIPO `CAR` SE TORNA MAIS SIMPLES E LIMPA. 
    VEJAMOS UM EXEMPLO:

        // MANEIRA ANTIGA
        struct car mycar;

        // MANEIRA NOVA
        car_t mycar;

    COMO PODEMOS VER, A NOVA MANEIRA UTILIZA O ALIAS `car_t`, TORNANDO O CÓDIGO MAIS LEGÍVEL E CONCISO.

    A MANIPULAÇÃO DAS VARIÁVEIS CONTINUA A MESMA:

        // ACESSANDO 'MYCAR'
        mycar.year = 2011;
        strcpy(mycar.plate, "CS50");
        mycar.odometer = 50505;