CI√äNCIA DA COMPUTA√á√ÉO:
    
    INPUT -> ??? -> OUTPUT

    Input  - Problema a ser resolvido.
    Output - Resultado ou solu√ß√£o do problema.
    ???    - O ingrediente secreto que converteremos inputs em outputs.

BIN√ÅRIO:

    Computadores s√≥ "falam" em 0's e 1's (base-2 / bin√°rio) 
    bit  - √© um d√≠gito bin√°rio

    EXEMPLO DE COMO FUNCIONA O C√ìDIGO BIN√ÅRIO:

        bit's | Representa√ß√£o Decimal
        000   =   0
        001   =   1
        010   =   2
        011   =   3
        100   =   4
        101   =   5
        110   =   6
        111   =   7

    byte's representam uma cadeia bin√°ria de 8 bit's, que nos possibilita 256 op√ß√µes de ON & OFF.
    E quanto mais bytes, mais podemos representar e mapear nosso mundo real para as m√°quinas.

    EXEMPLO DE 1 byte:

        128|64|32|16|8|4|2|1
          0  0  0  0 0 0 0 0  = 0
          0  0  0  0 0 0 1 1  = 3
          1  1  1  1 1 1 1 1  = 255

ASCII:

    Como representar a letra 'A' em bin√°rio?
        01000001 = 65 = A  
    Esse tipo de sistema se chama ASCII, que mapea em bits/bytes o nosso alfabeto ou linguagem.
    Link de uma tabela ASCII completa: https://www.ascii-code.com/pt
    Mas n√£o √© o que utilizamos atualmente, pois 256 op√ß√µes se tornaram muito limitadas.

UNICODE:

    Esta √© a tabela que usamos atualmente, 
    pois um caractere pode ser representado por 16 bits, 24 bits ou at√© mesmo 32.

    O que significa que s√£o 1 byte, 2, 3 ou 4 bytes,
    que nos d√° uma capacidade de 4 bilh√µes de caracteres poss√≠veis.

    Com isso podemos abranger todas as linguagens de diferentes pa√≠ses e culturas,
    assim tamb√©m como a linguagem dos emojis entre outras existententes na internet.

    Base-16 - Hexadecimal:

        Para facilitar a leitura dos digitos bin√°rios, 
        n√≥s usamos outra base para representar nossos caracteres.
        A Base-16 Hexadecimal.

        U+1F44D = üëç

        U+ √© so uma conven√ß√£o do UNICODE.

RGB E REPRESENTA√á√ÉO:

    Nossos aparelhos representam cores com o RGB.
    Significa que em nossas telas possuimos diversos pontos que representam Vermelho, Verde e Azul.
    
    Esses pontos s√£o chamados de pixels. 
    Cada pixel de RGB pode ter sua tonalidade alterada de 0 para 255.
    Oque nos possibilita diversas varia√ß√µes de cores.

    Com diversos pixels podemos representar pequenas e grandes imagens, e at√© aumentar a qualidade da imagem.
    Com diversas imagens podemos representar v√≠deos.